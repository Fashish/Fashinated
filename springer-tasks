

Task 1:

For this task, I ran a series of exploratory based tests to verify links, footers, spellings and overall aesthetics of the UI.
I also checked tested the site in different browsers as well different screen sizes, including mobile, by using Chrome Dev tools to verify all elements render correctly and everything looks as they should.

I also took into consideration the reposnse times of specific functions on the site, such as load times and searching a query, to make sure nothing's out of ordinary in terms of performance.

For my automation tests please refer to my github repo branch at: https://github.com/Fashish/Fashinated/tree/springer-automation-tests

Task 2:





Task 3:

1.  What questions you would ask of the customer to ensure requirements are met
  a.  Please ensure your new password is different to your old one.
  b.  Would you like to add a forgotten password question and answer prompt to your account?

2.  What tools/environment setup you may need in order to test this change and how would you come to this decision
  a.  Tracking tools such as Jira or Team Foundation Server to track defects, tasks and projects
  b.  I’d use Github for our open-source VCS for the fact that it’s the industry standard and also my own familiarity with it
  c.  Because the project is delivered in a continuous delivery manner then we could use Jenkins or TeamCity to achieve that
  d.  I’d use PyCharm to write my python codes for the automation tests - if applicable - and install the Selenium Web-driver library in the python version being used since it’ll be the primary driving force for writing and running our automation framework
  e.  A compatibility test tool such as Sauce Labs to verify the new changes render correctly on all browsers and platforms including mobile
  f.  Slack as a communication tool between teams involved for its ease of use
  g.  Google Docs for any documentation *if necessary*

3.  What tests you would carry out when this new functionality has been developed
  a.  A series of acceptance tests to make sure all the requirements set by the product owner/business are satisfied.
  b.  Regressions tests around the login/sign up components to verify no regressions been occurred.

